sudo: required 
language: generic
os: linux
dist: bionic
compiler:
  - gcc
services:
  - docker
notifications:
  email:
    on_success: change
    on_failure: always
    recipients:
      - ros-contributions@amazon.com
  email:
    on_success: always
    on_failure: always
    recipients:
      - travis-build@platform-notifications.robomaker.aws.a2z.com
env:
  global:
    - GH_USER_NAME="travis-ci"
    - GH_USER_EMAIL="travis@travis-ci.org"
    - AWS_DEFAULT_REGION=us-west-2
before_install:
- groups | grep docker; ret=$?; if [ $ret == "1" ]; then sudo usermod -aG docker $USER && newgrp docker; fi
- sudo apt-get update && sudo apt-get install -y python3 python3-distutils
- which pip; ret=$?; if [ $ret == "1" ]; then curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3 get-pip.py --user; fi
- pip install --user awscli
install:
  # Universal steps for fetching a repository & restructuring the directory tree to align with the way our CI is set up
  # Move travis-scripts to ros_app/.ros_ci and set TRAVIS_BUILD_DIR to be ros_app
  - git clone -b ${CLONE_BRANCH} ${CLONE_URL} ${TRAVIS_BUILD_DIR}/../ros_app
  - cp -R ${TRAVIS_BUILD_DIR} ${TRAVIS_BUILD_DIR}/../.ros_ci
  - mv ${TRAVIS_BUILD_DIR}/../ros_app ${TRAVIS_BUILD_DIR}
  - mv ${TRAVIS_BUILD_DIR}/../.ros_ci ${TRAVIS_BUILD_DIR}/ros_app/.ros_ci
  - export TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR}/ros_app
  - cd ${TRAVIS_BUILD_DIR}
before_deploy:
# Remove the line containing `aws s3 ls` in order to skip querying of S3
- sed -i 's/.*aws s3 ls.*//g' .ros_ci/before_deploy.sh
- . .ros_ci/before_deploy.sh && set +e
jobs:
  include:
    - stage: Build Downstream Consumers
      # The build jobs below are modeled after the respective .travis.yml files in the relevant repository (i.e. CLONE_URL/.travis.yml).
      name: "Build & Bundle ROS1 Sample App amd64"
      arch: amd64
      env: 
        - ROS_VERSION=1
        - ROS_DISTRO=melodic
        - GAZEBO_VERSION=9
        - WORKSPACES="robot_ws simulation_ws"
        - SA_NAME=hello-world
        - SA_PACKAGE_NAME=hello_world_robot
        - NO_TEST=true
        - CLONE_URL=https://github.com/aws-robotics/aws-robomaker-sample-application-helloworld
        - CLONE_BRANCH=ros1
      script:
        - . .ros_ci/add_tag.sh && set +e
        - while sleep 9m; do echo "=====[ $SECONDS seconds still running ]====="; done &
        - ".ros_ci/ce_build.sh"
        - kill %1
      deploy:
        - provider: script
          script: "echo Performing mock deploy stage"
          on:
            branch: master
            
    - name: "Build & Bundle ROS1 Sample App arm64"
      arch: arm64
      env:
        - DOCKER_ARCH=arm64v8
        - ROS_VERSION=1
        - ROS_DISTRO=melodic
        - GAZEBO_VERSION=9
        - WORKSPACES="robot_ws simulation_ws"
        - SA_NAME=hello-world
        - SA_PACKAGE_NAME=hello_world_robot
        - NO_TEST=true
        - CLONE_URL=https://github.com/aws-robotics/aws-robomaker-sample-application-helloworld
        - CLONE_BRANCH=ros1
      script:
        - . .ros_ci/add_tag.sh && set +e
        - while sleep 9m; do echo "=====[ $SECONDS seconds still running ]====="; done &
        - ".ros_ci/ce_build.sh"
        - kill %1
      deploy:
        - provider: script
          script: "echo Performing mock deploy stage"
          on:
            branch: master
       
    - name: "Build & Bundle ROS1 Sample App arm32"
      arch: arm64
      env:
        - DOCKER_ARCH=arm32v7
        - ROS_VERSION=1
        - ROS_DISTRO=melodic
        - GAZEBO_VERSION=9
        - WORKSPACES="robot_ws simulation_ws"
        - SA_NAME=hello-world
        - SA_PACKAGE_NAME=hello_world_robot
        - NO_TEST=true
        - CLONE_URL=https://github.com/aws-robotics/aws-robomaker-sample-application-helloworld
        - CLONE_BRANCH=ros1
      script:
        - . .ros_ci/add_tag.sh && set +e
        - while sleep 9m; do echo "=====[ $SECONDS seconds still running ]====="; done &
        - ".ros_ci/ce_build.sh"
        - kill %1
      deploy:
        - provider: script
          script: "echo Performing mock deploy stage"
          on:
            branch: master
            
    - name: "Build & Bundle ROS2 Sample App"
      env: 
        - ROS_VERSION=2 
        - ROS_DISTRO=dashing
        - GAZEBO_VERSION=9
        - WORKSPACES="robot_ws simulation_ws"
        - SA_NAME=hello-world
        - SA_PACKAGE_NAME=hello_world_robot
        - NO_TEST=true
        - CLONE_URL=https://github.com/aws-robotics/aws-robomaker-sample-application-helloworld
        - CLONE_BRANCH=ros2
      script:
        - . .ros_ci/add_tag.sh && set +e
        - while sleep 9m; do echo "=====[ $SECONDS seconds still running ]====="; done &
        - ".ros_ci/ce_build.sh"
        - kill %1
      deploy:
        - provider: script
          script: "echo Performing mock deploy stage"
          on:
            branch: master

    - name: "Build ROS1 Cloud Extension"
      env:
        - PACKAGE_NAMES=aws_ros1_common
        - ROS_VERSION=1
        - ROS_DISTRO=kinetic
        - CLONE_URL=https://github.com/aws-robotics/utils-ros1
        - CLONE_BRANCH=master
      script:
        - ".ros_ci/ce_build.sh"
      before_deploy: # Blank override - no deploy stage for CEs
      after_deploy: # Blank override - no deploy stage for CEs
      
    - name: "Build ROS2 Cloud Extension"
      env:
        - PACKAGE_NAMES=aws_ros2_common
        - ROS_VERSION=2
        - ROS_DISTRO=dashing
        - CLONE_URL="https://github.com/aws-robotics/utils-ros2" 
        - CLONE_BRANCH=master
      script:
        - ".ros_ci/ce_build.sh"
      before_deploy: # Blank override - no deploy stage for CEs
      after_deploy: # Blank override - no deploy stage for CEs
      
after_deploy:
- .ros_ci/post_deploy.sh
